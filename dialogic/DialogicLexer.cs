//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Dialogic.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Dialogic.Antlr {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
public partial class DialogicLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, COMMAND=4, DELIM=5, SP=6, NEWLINE=7, WORD=8, COMMENT=9, 
		LINE_COMMENT=10, ERROR=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "COMMAND", "DELIM", "SP", "NEWLINE", "WORD", "COMMENT", 
		"LINE_COMMENT", "ERROR"
	};


	public DialogicLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "COMMAND", "DELIM", "SP", "NEWLINE", "WORD", "COMMENT", 
		"LINE_COMMENT", "ERROR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Dialogic.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r\x82\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x5\x5\x44\n\x5\x3\x6\a\x6G\n\x6\f\x6\xE\x6J\v\x6\x3\x6\x3\x6"+
		"\a\x6N\n\x6\f\x6\xE\x6Q\v\x6\x3\a\x3\a\x3\b\x5\bV\n\b\x3\b\x3\b\x6\bZ"+
		"\n\b\r\b\xE\b[\x3\t\x6\t_\n\t\r\t\xE\t`\x3\n\x3\n\x3\n\x3\n\x3\n\a\nh"+
		"\n\n\f\n\xE\nk\v\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\a\vv\n"+
		"\v\f\v\xE\vy\v\v\x3\v\x3\v\x5\v}\n\v\x3\v\x3\v\x3\f\x3\f\x4iw\x2\x2\r"+
		"\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13"+
		"\x2\v\x15\x2\f\x17\x2\r\x3\x2\x4\x4\x2\v\v\"\"\v\x2#$&\')+.\x30\x32=\x41"+
		"\x41\x43\\\x63|~~\x95\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2"+
		"\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2"+
		"\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3"+
		"\x2\x2\x2\x3\x19\x3\x2\x2\x2\x5\x1B\x3\x2\x2\x2\a\x1D\x3\x2\x2\x2\t\x43"+
		"\x3\x2\x2\x2\vH\x3\x2\x2\x2\rR\x3\x2\x2\x2\xFY\x3\x2\x2\x2\x11^\x3\x2"+
		"\x2\x2\x13\x62\x3\x2\x2\x2\x15q\x3\x2\x2\x2\x17\x80\x3\x2\x2\x2\x19\x1A"+
		"\a}\x2\x2\x1A\x4\x3\x2\x2\x2\x1B\x1C\a\x7F\x2\x2\x1C\x6\x3\x2\x2\x2\x1D"+
		"\x1E\a?\x2\x2\x1E\b\x3\x2\x2\x2\x1F \a\x45\x2\x2 !\aJ\x2\x2!\"\a\x43\x2"+
		"\x2\"\x44\aV\x2\x2#$\aU\x2\x2$%\a\x43\x2\x2%\x44\a[\x2\x2&\'\aY\x2\x2"+
		"\'(\a\x43\x2\x2()\aK\x2\x2)\x44\aV\x2\x2*+\a\x46\x2\x2+\x44\aQ\x2\x2,"+
		"-\a\x43\x2\x2-.\aU\x2\x2.\x44\aM\x2\x2/\x30\aQ\x2\x2\x30\x31\aR\x2\x2"+
		"\x31\x44\aV\x2\x2\x32\x33\aI\x2\x2\x33\x44\aQ\x2\x2\x34\x35\aO\x2\x2\x35"+
		"\x36\aG\x2\x2\x36\x37\aV\x2\x2\x37\x44\a\x43\x2\x2\x38\x39\a\x45\x2\x2"+
		"\x39:\aQ\x2\x2:;\aP\x2\x2;\x44\a\x46\x2\x2<=\aH\x2\x2=>\aK\x2\x2>?\aP"+
		"\x2\x2?\x44\a\x46\x2\x2@\x41\aU\x2\x2\x41\x42\aG\x2\x2\x42\x44\aV\x2\x2"+
		"\x43\x1F\x3\x2\x2\x2\x43#\x3\x2\x2\x2\x43&\x3\x2\x2\x2\x43*\x3\x2\x2\x2"+
		"\x43,\x3\x2\x2\x2\x43/\x3\x2\x2\x2\x43\x32\x3\x2\x2\x2\x43\x34\x3\x2\x2"+
		"\x2\x43\x38\x3\x2\x2\x2\x43<\x3\x2\x2\x2\x43@\x3\x2\x2\x2\x44\n\x3\x2"+
		"\x2\x2\x45G\x5\r\a\x2\x46\x45\x3\x2\x2\x2GJ\x3\x2\x2\x2H\x46\x3\x2\x2"+
		"\x2HI\x3\x2\x2\x2IK\x3\x2\x2\x2JH\x3\x2\x2\x2KO\a%\x2\x2LN\x5\r\a\x2M"+
		"L\x3\x2\x2\x2NQ\x3\x2\x2\x2OM\x3\x2\x2\x2OP\x3\x2\x2\x2P\f\x3\x2\x2\x2"+
		"QO\x3\x2\x2\x2RS\t\x2\x2\x2S\xE\x3\x2\x2\x2TV\a\xF\x2\x2UT\x3\x2\x2\x2"+
		"UV\x3\x2\x2\x2VW\x3\x2\x2\x2WZ\a\f\x2\x2XZ\a\xF\x2\x2YU\x3\x2\x2\x2YX"+
		"\x3\x2\x2\x2Z[\x3\x2\x2\x2[Y\x3\x2\x2\x2[\\\x3\x2\x2\x2\\\x10\x3\x2\x2"+
		"\x2]_\t\x3\x2\x2^]\x3\x2\x2\x2_`\x3\x2\x2\x2`^\x3\x2\x2\x2`\x61\x3\x2"+
		"\x2\x2\x61\x12\x3\x2\x2\x2\x62\x63\a\x31\x2\x2\x63\x64\a,\x2\x2\x64i\x3"+
		"\x2\x2\x2\x65h\x5\x13\n\x2\x66h\v\x2\x2\x2g\x65\x3\x2\x2\x2g\x66\x3\x2"+
		"\x2\x2hk\x3\x2\x2\x2ij\x3\x2\x2\x2ig\x3\x2\x2\x2jl\x3\x2\x2\x2ki\x3\x2"+
		"\x2\x2lm\a,\x2\x2mn\a\x31\x2\x2no\x3\x2\x2\x2op\b\n\x2\x2p\x14\x3\x2\x2"+
		"\x2qr\a\x31\x2\x2rs\a\x31\x2\x2sw\x3\x2\x2\x2tv\v\x2\x2\x2ut\x3\x2\x2"+
		"\x2vy\x3\x2\x2\x2wx\x3\x2\x2\x2wu\x3\x2\x2\x2x|\x3\x2\x2\x2yw\x3\x2\x2"+
		"\x2z}\x5\xF\b\x2{}\a\x2\x2\x3|z\x3\x2\x2\x2|{\x3\x2\x2\x2}~\x3\x2\x2\x2"+
		"~\x7F\b\v\x2\x2\x7F\x16\x3\x2\x2\x2\x80\x81\v\x2\x2\x2\x81\x18\x3\x2\x2"+
		"\x2\xE\x2\x43HOUY[`giw|\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Dialogic.Antlr
