//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Dialogic.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Dialogic.Antlr {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
public partial class DialogicLexer : Lexer {
	public const int
		T__0=1, COMMAND=2, DELIM=3, LB=4, RB=5, SP=6, NEWLINE=7, WORD=8, COMMENT=9, 
		LINE_COMMENT=10, ERROR=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "COMMAND", "DELIM", "LB", "RB", "SP", "NEWLINE", "WORD", "COMMENT", 
		"LINE_COMMENT", "ERROR"
	};


	public DialogicLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "COMMAND", "DELIM", "LB", "RB", "SP", "NEWLINE", "WORD", "COMMENT", 
		"LINE_COMMENT", "ERROR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Dialogic.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r\x90\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x5\x3\x38\n\x3\x3\x4\a\x4;\n\x4\f\x4\xE\x4>\v\x4\x3\x4\x3\x4\a"+
		"\x4\x42\n\x4\f\x4\xE\x4\x45\v\x4\x3\x5\a\x5H\n\x5\f\x5\xE\x5K\v\x5\x3"+
		"\x5\x3\x5\a\x5O\n\x5\f\x5\xE\x5R\v\x5\x3\x6\a\x6U\n\x6\f\x6\xE\x6X\v\x6"+
		"\x3\x6\x3\x6\a\x6\\\n\x6\f\x6\xE\x6_\v\x6\x3\a\x3\a\x3\b\x5\b\x64\n\b"+
		"\x3\b\x3\b\x6\bh\n\b\r\b\xE\bi\x3\t\x6\tm\n\t\r\t\xE\tn\x3\n\x3\n\x3\n"+
		"\x3\n\x3\n\a\nv\n\n\f\n\xE\ny\v\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3"+
		"\v\x3\v\a\v\x84\n\v\f\v\xE\v\x87\v\v\x3\v\x3\v\x5\v\x8B\n\v\x3\v\x3\v"+
		"\x3\f\x3\f\x4w\x85\x2\x2\r\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r"+
		"\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x3\x2\x4\x4\x2\v\v\""+
		"\"\v\x2#$&\')+.\x30\x32=\x41\x41\x43\\\x63|~~\xA5\x2\x3\x3\x2\x2\x2\x2"+
		"\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2"+
		"\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2"+
		"\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x3\x19\x3\x2\x2\x2\x5\x37\x3\x2"+
		"\x2\x2\a<\x3\x2\x2\x2\tI\x3\x2\x2\x2\vV\x3\x2\x2\x2\r`\x3\x2\x2\x2\xF"+
		"g\x3\x2\x2\x2\x11l\x3\x2\x2\x2\x13p\x3\x2\x2\x2\x15\x7F\x3\x2\x2\x2\x17"+
		"\x8E\x3\x2\x2\x2\x19\x1A\a?\x2\x2\x1A\x4\x3\x2\x2\x2\x1B\x1C\a\x45\x2"+
		"\x2\x1C\x1D\aJ\x2\x2\x1D\x1E\a\x43\x2\x2\x1E\x38\aV\x2\x2\x1F \aU\x2\x2"+
		" !\a\x43\x2\x2!\x38\a[\x2\x2\"#\aY\x2\x2#$\a\x43\x2\x2$%\aK\x2\x2%\x38"+
		"\aV\x2\x2&\'\a\x46\x2\x2\'\x38\aQ\x2\x2()\a\x43\x2\x2)*\aU\x2\x2*\x38"+
		"\aM\x2\x2+,\aQ\x2\x2,-\aR\x2\x2-\x38\aV\x2\x2./\aI\x2\x2/\x38\aQ\x2\x2"+
		"\x30\x31\aH\x2\x2\x31\x32\aK\x2\x2\x32\x33\aP\x2\x2\x33\x38\a\x46\x2\x2"+
		"\x34\x35\aU\x2\x2\x35\x36\aG\x2\x2\x36\x38\aV\x2\x2\x37\x1B\x3\x2\x2\x2"+
		"\x37\x1F\x3\x2\x2\x2\x37\"\x3\x2\x2\x2\x37&\x3\x2\x2\x2\x37(\x3\x2\x2"+
		"\x2\x37+\x3\x2\x2\x2\x37.\x3\x2\x2\x2\x37\x30\x3\x2\x2\x2\x37\x34\x3\x2"+
		"\x2\x2\x38\x6\x3\x2\x2\x2\x39;\x5\r\a\x2:\x39\x3\x2\x2\x2;>\x3\x2\x2\x2"+
		"<:\x3\x2\x2\x2<=\x3\x2\x2\x2=?\x3\x2\x2\x2><\x3\x2\x2\x2?\x43\a%\x2\x2"+
		"@\x42\x5\r\a\x2\x41@\x3\x2\x2\x2\x42\x45\x3\x2\x2\x2\x43\x41\x3\x2\x2"+
		"\x2\x43\x44\x3\x2\x2\x2\x44\b\x3\x2\x2\x2\x45\x43\x3\x2\x2\x2\x46H\x5"+
		"\r\a\x2G\x46\x3\x2\x2\x2HK\x3\x2\x2\x2IG\x3\x2\x2\x2IJ\x3\x2\x2\x2JL\x3"+
		"\x2\x2\x2KI\x3\x2\x2\x2LP\a}\x2\x2MO\x5\r\a\x2NM\x3\x2\x2\x2OR\x3\x2\x2"+
		"\x2PN\x3\x2\x2\x2PQ\x3\x2\x2\x2Q\n\x3\x2\x2\x2RP\x3\x2\x2\x2SU\x5\r\a"+
		"\x2TS\x3\x2\x2\x2UX\x3\x2\x2\x2VT\x3\x2\x2\x2VW\x3\x2\x2\x2WY\x3\x2\x2"+
		"\x2XV\x3\x2\x2\x2Y]\a\x7F\x2\x2Z\\\x5\r\a\x2[Z\x3\x2\x2\x2\\_\x3\x2\x2"+
		"\x2][\x3\x2\x2\x2]^\x3\x2\x2\x2^\f\x3\x2\x2\x2_]\x3\x2\x2\x2`\x61\t\x2"+
		"\x2\x2\x61\xE\x3\x2\x2\x2\x62\x64\a\xF\x2\x2\x63\x62\x3\x2\x2\x2\x63\x64"+
		"\x3\x2\x2\x2\x64\x65\x3\x2\x2\x2\x65h\a\f\x2\x2\x66h\a\xF\x2\x2g\x63\x3"+
		"\x2\x2\x2g\x66\x3\x2\x2\x2hi\x3\x2\x2\x2ig\x3\x2\x2\x2ij\x3\x2\x2\x2j"+
		"\x10\x3\x2\x2\x2km\t\x3\x2\x2lk\x3\x2\x2\x2mn\x3\x2\x2\x2nl\x3\x2\x2\x2"+
		"no\x3\x2\x2\x2o\x12\x3\x2\x2\x2pq\a\x31\x2\x2qr\a,\x2\x2rw\x3\x2\x2\x2"+
		"sv\x5\x13\n\x2tv\v\x2\x2\x2us\x3\x2\x2\x2ut\x3\x2\x2\x2vy\x3\x2\x2\x2"+
		"wx\x3\x2\x2\x2wu\x3\x2\x2\x2xz\x3\x2\x2\x2yw\x3\x2\x2\x2z{\a,\x2\x2{|"+
		"\a\x31\x2\x2|}\x3\x2\x2\x2}~\b\n\x2\x2~\x14\x3\x2\x2\x2\x7F\x80\a\x31"+
		"\x2\x2\x80\x81\a\x31\x2\x2\x81\x85\x3\x2\x2\x2\x82\x84\v\x2\x2\x2\x83"+
		"\x82\x3\x2\x2\x2\x84\x87\x3\x2\x2\x2\x85\x86\x3\x2\x2\x2\x85\x83\x3\x2"+
		"\x2\x2\x86\x8A\x3\x2\x2\x2\x87\x85\x3\x2\x2\x2\x88\x8B\x5\xF\b\x2\x89"+
		"\x8B\a\x2\x2\x3\x8A\x88\x3\x2\x2\x2\x8A\x89\x3\x2\x2\x2\x8B\x8C\x3\x2"+
		"\x2\x2\x8C\x8D\b\v\x2\x2\x8D\x16\x3\x2\x2\x2\x8E\x8F\v\x2\x2\x2\x8F\x18"+
		"\x3\x2\x2\x2\x12\x2\x37<\x43IPV]\x63ginuw\x85\x8A\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Dialogic.Antlr
