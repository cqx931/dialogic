//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Dialogic.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Dialogic.Antlr {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
public partial class DialogicLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, DELIM=11, LB=12, RB=13, SP=14, NEWLINE=15, OPS=16, WORD=17, COMMENT=18, 
		LINE_COMMENT=19, ERROR=20;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "DELIM", "LB", "RB", "SP", "NEWLINE", "OPS", "WORD", "COMMENT", 
		"LINE_COMMENT", "ERROR"
	};


	public DialogicLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'CHAT'", "'SAY'", "'WAIT'", "'DO'", "'ASK'", "'OPT'", "'GO'", "'FIND'", 
		"'SET'", "'GRAM'", null, "'{'", "'}'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, "DELIM", 
		"LB", "RB", "SP", "NEWLINE", "OPS", "WORD", "COMMENT", "LINE_COMMENT", 
		"ERROR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Dialogic.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x16\x9B\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3"+
		"\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\a\fW\n\f\f\f\xE\fZ\v\f\x3\f\x3\f\a\f"+
		"^\n\f\f\f\xE\f\x61\v\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x5\x10"+
		"j\n\x10\x3\x10\x3\x10\x6\x10n\n\x10\r\x10\xE\x10o\x3\x11\x6\x11s\n\x11"+
		"\r\x11\xE\x11t\x3\x12\x6\x12x\n\x12\r\x12\xE\x12y\x3\x13\x3\x13\x3\x13"+
		"\x3\x13\x3\x13\a\x13\x81\n\x13\f\x13\xE\x13\x84\v\x13\x3\x13\x3\x13\x3"+
		"\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\a\x14\x8F\n\x14\f\x14\xE"+
		"\x14\x92\v\x14\x3\x14\x3\x14\x5\x14\x96\n\x14\x3\x14\x3\x14\x3\x15\x3"+
		"\x15\x4\x82\x90\x2\x2\x16\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2"+
		"\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D"+
		"\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16\x3\x2\x5\x4"+
		"\x2\v\v\"\"\a\x2##&&,,>@``\v\x2#$&\')+.\x30\x32=\x41\x41\x43\\\x63|~~"+
		"\xA5\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2"+
		"\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2"+
		"\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3"+
		"\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2"+
		"!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3"+
		"\x2\x2\x2\x3+\x3\x2\x2\x2\x5\x30\x3\x2\x2\x2\a\x34\x3\x2\x2\x2\t\x39\x3"+
		"\x2\x2\x2\v<\x3\x2\x2\x2\r@\x3\x2\x2\x2\xF\x44\x3\x2\x2\x2\x11G\x3\x2"+
		"\x2\x2\x13L\x3\x2\x2\x2\x15P\x3\x2\x2\x2\x17X\x3\x2\x2\x2\x19\x62\x3\x2"+
		"\x2\x2\x1B\x64\x3\x2\x2\x2\x1D\x66\x3\x2\x2\x2\x1Fm\x3\x2\x2\x2!r\x3\x2"+
		"\x2\x2#w\x3\x2\x2\x2%{\x3\x2\x2\x2\'\x8A\x3\x2\x2\x2)\x99\x3\x2\x2\x2"+
		"+,\a\x45\x2\x2,-\aJ\x2\x2-.\a\x43\x2\x2./\aV\x2\x2/\x4\x3\x2\x2\x2\x30"+
		"\x31\aU\x2\x2\x31\x32\a\x43\x2\x2\x32\x33\a[\x2\x2\x33\x6\x3\x2\x2\x2"+
		"\x34\x35\aY\x2\x2\x35\x36\a\x43\x2\x2\x36\x37\aK\x2\x2\x37\x38\aV\x2\x2"+
		"\x38\b\x3\x2\x2\x2\x39:\a\x46\x2\x2:;\aQ\x2\x2;\n\x3\x2\x2\x2<=\a\x43"+
		"\x2\x2=>\aU\x2\x2>?\aM\x2\x2?\f\x3\x2\x2\x2@\x41\aQ\x2\x2\x41\x42\aR\x2"+
		"\x2\x42\x43\aV\x2\x2\x43\xE\x3\x2\x2\x2\x44\x45\aI\x2\x2\x45\x46\aQ\x2"+
		"\x2\x46\x10\x3\x2\x2\x2GH\aH\x2\x2HI\aK\x2\x2IJ\aP\x2\x2JK\a\x46\x2\x2"+
		"K\x12\x3\x2\x2\x2LM\aU\x2\x2MN\aG\x2\x2NO\aV\x2\x2O\x14\x3\x2\x2\x2PQ"+
		"\aI\x2\x2QR\aT\x2\x2RS\a\x43\x2\x2ST\aO\x2\x2T\x16\x3\x2\x2\x2UW\x5\x1D"+
		"\xF\x2VU\x3\x2\x2\x2WZ\x3\x2\x2\x2XV\x3\x2\x2\x2XY\x3\x2\x2\x2Y[\x3\x2"+
		"\x2\x2ZX\x3\x2\x2\x2[_\a%\x2\x2\\^\x5\x1D\xF\x2]\\\x3\x2\x2\x2^\x61\x3"+
		"\x2\x2\x2_]\x3\x2\x2\x2_`\x3\x2\x2\x2`\x18\x3\x2\x2\x2\x61_\x3\x2\x2\x2"+
		"\x62\x63\a}\x2\x2\x63\x1A\x3\x2\x2\x2\x64\x65\a\x7F\x2\x2\x65\x1C\x3\x2"+
		"\x2\x2\x66g\t\x2\x2\x2g\x1E\x3\x2\x2\x2hj\a\xF\x2\x2ih\x3\x2\x2\x2ij\x3"+
		"\x2\x2\x2jk\x3\x2\x2\x2kn\a\f\x2\x2ln\a\xF\x2\x2mi\x3\x2\x2\x2ml\x3\x2"+
		"\x2\x2no\x3\x2\x2\x2om\x3\x2\x2\x2op\x3\x2\x2\x2p \x3\x2\x2\x2qs\t\x3"+
		"\x2\x2rq\x3\x2\x2\x2st\x3\x2\x2\x2tr\x3\x2\x2\x2tu\x3\x2\x2\x2u\"\x3\x2"+
		"\x2\x2vx\t\x4\x2\x2wv\x3\x2\x2\x2xy\x3\x2\x2\x2yw\x3\x2\x2\x2yz\x3\x2"+
		"\x2\x2z$\x3\x2\x2\x2{|\a\x31\x2\x2|}\a,\x2\x2}\x82\x3\x2\x2\x2~\x81\x5"+
		"%\x13\x2\x7F\x81\v\x2\x2\x2\x80~\x3\x2\x2\x2\x80\x7F\x3\x2\x2\x2\x81\x84"+
		"\x3\x2\x2\x2\x82\x83\x3\x2\x2\x2\x82\x80\x3\x2\x2\x2\x83\x85\x3\x2\x2"+
		"\x2\x84\x82\x3\x2\x2\x2\x85\x86\a,\x2\x2\x86\x87\a\x31\x2\x2\x87\x88\x3"+
		"\x2\x2\x2\x88\x89\b\x13\x2\x2\x89&\x3\x2\x2\x2\x8A\x8B\a\x31\x2\x2\x8B"+
		"\x8C\a\x31\x2\x2\x8C\x90\x3\x2\x2\x2\x8D\x8F\v\x2\x2\x2\x8E\x8D\x3\x2"+
		"\x2\x2\x8F\x92\x3\x2\x2\x2\x90\x91\x3\x2\x2\x2\x90\x8E\x3\x2\x2\x2\x91"+
		"\x95\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x93\x96\x5\x1F\x10\x2\x94\x96\a\x2"+
		"\x2\x3\x95\x93\x3\x2\x2\x2\x95\x94\x3\x2\x2\x2\x96\x97\x3\x2\x2\x2\x97"+
		"\x98\b\x14\x2\x2\x98(\x3\x2\x2\x2\x99\x9A\v\x2\x2\x2\x9A*\x3\x2\x2\x2"+
		"\xE\x2X_imoty\x80\x82\x90\x95\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Dialogic.Antlr
